#!/bin/bash

SOCKET=/tmp/fand
LAST_FILE=/var/tmp/fand.last

NUMBER_REGEX='^[0-9]+$'

function fan_to {
  TARGET_PERCENT=$1

  PWM_VALUE=`echo "scale=2;$TARGET_PERCENT/100 * 255" | bc | awk '{print int($1 + 0.5)}'`

  # Case fans
  TOP=pwm1
  BOTTOM=pwm5

  FANS="$TOP $BOTTOM"
  FAN_DEVICE="nct6775.656"

  HWMON_BASE="/sys/class/hwmon"
  HWMON=$(ls -l /sys/class/hwmon | grep $FAN_DEVICE | awk '{ print $9 }')

  BASE_PATH="$HWMON_BASE/$HWMON"
  echo "Found device at \"$BASE_PATH\""

  for FAN in $FANS
  do
    echo "Adjusting $FAN"

    echo "  Enabling manual control"
    echo 1 > "$BASE_PATH"/"$FAN"_enable

    echo "  Adjusting speed to $TARGET_PERCENT% (pwm = $PWM_VALUE)"
    echo $PWM_VALUE > "$BASE_PATH"/"$FAN"

    echo "Updating history file"
    echo $TARGET_PERCENT > $LAST_FILE
  done
}

trap "rm -f $SOCKET" EXIT
if [[ ! -p $SOCKET ]]; then
  mkfifo $SOCKET -m0666
fi

touch $LAST_FILE

echo "Starting fand"

LAST_PERCENT=$(cat $LAST_FILE)

if [[ $LAST_PERCENT =~ $NUMBER_REGEX ]]; then
  echo "Restoring fan from history"
  fan_to $LAST_PERCENT
fi

while true; do
  if read INPUT <$SOCKET; then
    if [[ "$INPUT" == 'quit' ]]; then
      echo "Quitting"
      break
    fi

    echo "Got:"
    echo "$INPUT"

    fan_to "$INPUT"
  fi
done

echo "Exiting fand"
